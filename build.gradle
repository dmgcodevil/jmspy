apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'

sourceCompatibility = 1.7

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'signing'


    group = 'com.github.dmgcodevil'
    version = "${versionMajor}.${versionMinor}.${versionBuild}"

    repositories {
        mavenCentral()

        ivy {
            ivyPattern "$projectDir/repo/[organisation]/[module]-ivy-[revision].xml"
            artifactPattern "$projectDir/repo/[organisation]/[module]-[revision](-[classifier]).[ext]"
        }
    }

    uploadArchives {
        repositories {

            mavenLocal()

            ivy { url file(System.getProperty('user.home') + '/.ivylocal') }

            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'jmspy-core'
                    packaging 'jar'
                    description 'Library to record method invocations'
                    url 'http://github.com/dmgcodevil/jmspy'

                    scm {
                        url 'scm:git@github.com:dmgcodevil/jmspy.git'
                        connection 'scm:git@github.com:dmgcodevil/jmspy.git'
                        developerConnection 'scm:git@github.com:dmgcodevil/jmspy.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'dmgcodevil'
                            name 'Roman Pleshkov'
                        }
                    }
                }
            }
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourcesJar
    }

    signing {
        sign configurations.archives
    }

    dependencies {

        /* -------------- third party libraries -------------- */
        compile('com.google.guava:guava:18.0')
        compile('commons-collections:commons-collections:3.2.1')
        compile('org.apache.commons:commons-lang3:3.1')
        compile('commons-beanutils:commons-beanutils:1.9.2')

        /* ---------------- test dependencies ---------------- */
        testCompile('org.testng:testng:6.8.7')
        testCompile('org.mockito:mockito-all:1.9.5')

        /* ---------------- logger dependencies ---------------- */
        compile('org.slf4j:slf4j-api:1.6.4')
    }

}